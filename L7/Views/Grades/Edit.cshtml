@model L7.Models.Grade

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Grade</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
          <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label for="Course" class="control-label">Course</label>
                @Html.DropDownList("SelectedCoursesId", ViewBag.CoursesId as SelectList, new { @onchange="callChangefunc(this.value);", @class="form-control"})
            </div>

            <div class="form-group">
                <label asp-for="Enrollment" class="control-label"></label>
                <select asp-for="EnrollmentId" class ="form-control" asp-items="ViewBag.EnrollmentId"></select>
            </div>
            <div class="form-group">
                <label asp-for="GradeOption" class="control-label"></label>
                <select asp-for="GradeOptionId" class ="form-control" asp-items="ViewBag.GradeOptionId"></select>
            </div>
             <div class="form-group">
                <label asp-for="Classification" class="control-label"></label>
                <select asp-for="ClassificationId" class ="form-control" asp-items="ViewBag.ClassificationId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
